{"version":3,"file":"UiMenu-stories.fcfc9c8a.iframe.bundle.js","mappings":";;;;;;;;AA+CA;AACA;AACA;;AAMA;;AASA;;AAMA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2DA;;;;;;AAQA","sources":["webpack://@mlada/wclib/./src/stories/UiMenu.stories.ts"],"sourcesContent":["import { html } from 'lit';\nconst meta = {\n    title: 'Components/UI Menu',\n    component: 'ui-menu',\n    tags: ['autodocs'],\n    argTypes: {\n        type: {\n            control: 'radio',\n            options: ['vertical', 'horizontal'],\n            description: 'Menu orientation (vertical or horizontal)',\n            table: {\n                defaultValue: { summary: 'horizontal' },\n            },\n        },\n        size: {\n            control: 'radio',\n            options: ['small', 'medium', 'large'],\n            description: 'Size of menu items',\n            table: {\n                defaultValue: { summary: 'medium' },\n            },\n        },\n        elements: {\n            control: 'object',\n            description: 'Array of menu items with name and url',\n            table: {\n                defaultValue: { summary: '[]' },\n            },\n        }\n    },\n    args: {\n        type: 'horizontal',\n        size: 'medium',\n        elements: [\n            { name: 'Home', url: '/' },\n            { name: 'About', url: '/about' },\n            { name: 'Contact', url: '/contact' },\n        ],\n    },\n    render: (args) => html `\r\n    <style>\r\n      ui-menu::part(menu-container) {\r\n        position: relative;\r\n        display: inline-block;\r\n      }\r\n    </style>\r\n    <ui-menu\r\n      type=${args.type}\r\n      size=${args.size}\r\n      .elements=${args.elements}\r\n    ></ui-menu>\r\n  `,\n};\nexport default meta;\n// Default horizontal menu\nexport const Default = {};\n// Vertical menu variant\nexport const VerticalMenu = {\n    args: {\n        type: 'vertical',\n    },\n    decorators: [\n        (story) => html `\r\n      <div style=\"display: flex; height: 300px;\">\r\n        ${story()}\r\n      </div>\r\n    `,\n    ],\n};\n// Small size menu\nexport const SmallMenu = {\n    args: {\n        size: 'small',\n    },\n};\n// Large size menu\nexport const LargeMenu = {\n    args: {\n        size: 'large',\n    },\n};\n// Mobile burger menu demo\nexport const MobileBurgerMenu = {\n    args: {\n        type: 'horizontal',\n    },\n    decorators: [\n        (story) => html `\r\n      <style>\r\n        .mobile-preview {\r\n          position: relative;\r\n          border: 1px solid #ddd;\r\n          border-radius: 8px;\r\n          overflow: hidden;\r\n          width: 360px;\r\n          height: 600px;\r\n          resize: both;\r\n          overflow: auto;\r\n          background: white;\r\n        }\r\n        \r\n        .mobile-header {\r\n          display: flex;\r\n          justify-content: space-between;\r\n          align-items: center;\r\n          padding: 1rem;\r\n          background: #f8f9fa;\r\n          border-bottom: 1px solid #eee;\r\n          position: relative;\r\n        }\r\n        \r\n        .logo {\r\n          font-weight: bold;\r\n        }\r\n        \r\n        ui-menu::part(menu-container) {\r\n          position: static;\r\n        }\r\n        \r\n        @media (min-width: 768px) {\r\n          .mobile-preview {\r\n            width: 100%;\r\n            height: auto;\r\n            resize: none;\r\n          }\r\n        }\r\n      </style>\r\n      <div class=\"mobile-preview\">\r\n        <div class=\"mobile-header\">\r\n          ${story()}\r\n        </div>\r\n        <div style=\"padding: 1rem;\">\r\n          <p>Mobile content goes here. Resize the preview to see how the burger menu behaves.</p>\r\n        </div>\r\n      </div>\r\n    `,\n    ],\n    parameters: {\n        viewport: {\n            defaultViewport: 'mobile2',\n        },\n    },\n};\n;export const __namedExportsOrder = [\"Default\",\"VerticalMenu\",\"SmallMenu\",\"LargeMenu\",\"MobileBurgerMenu\"];"],"names":[],"sourceRoot":""}