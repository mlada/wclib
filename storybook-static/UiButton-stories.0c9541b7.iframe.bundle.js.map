{"version":3,"file":"UiButton-stories.0c9541b7.iframe.bundle.js","mappings":";;AAwEA;AACA;AACA;AACA;;AAEA;;;;;;;;;AAiCA;;AAKA","sources":["webpack://@mlada/wclib/./src/stories/UiButton.stories.ts"],"sourcesContent":["import { html } from 'lit';\n/**\n * ### Angular Usage\n * ```typescript\n * import { UiButtonDirective } from 'your-library';\n *\n * @NgModule({\n *   declarations: [UiButtonDirective],\n * })\n * export class YourModule {}\n *\n * // In template:\n * <ui-button\n *   [type]=\"'primary'\"\n *   size=\"medium\"\n *   label=\"Click me\"\n *   (click)=\"handleClick($event)\"\n * ></ui-button>\n *\n * // In component:\n * handleClick(event: Event) {\n *   console.log('Button clicked', event);\n * }\n * ```\n *\n * ### React Usage\n * ```jsx\n * import { ReactUiButton } from 'your-library';\n *\n * function App() {\n *   return (\n *     <ReactUiButton\n *       primary\n *       size=\"large\"\n *       label=\"Submit\"\n *       onClick={() => console.log('Clicked')}\n *     />\n *   );\n * }\n * ```\n */\nconst meta = {\n    title: 'Components/UI Button',\n    tags: ['autodocs'],\n    argTypes: {\n        type: {\n            control: 'radio',\n            options: ['primary', 'light', 'secondary'],\n            description: 'Button type variant',\n            table: {\n                defaultValue: { summary: 'primary' },\n            },\n        },\n        size: {\n            control: 'radio',\n            options: ['small', 'medium', 'large'],\n            description: 'Button size',\n            table: {\n                defaultValue: { summary: 'medium' },\n            },\n        },\n        label: {\n            control: 'text',\n            description: 'Button text content',\n        },\n        onClick: {\n            action: 'clicked',\n            description: 'Click event handler',\n        },\n    },\n    render: (args) => html `\r\n    <ui-button\r\n      type=${args.type}\r\n      size=${args.size}\r\n      label=${args.label}\r\n      @click=${args.onClick}\r\n    ></ui-button>\r\n  `,\n};\nexport default meta;\nexport const Primary = {\n    args: {\n        type: 'primary',\n        size: 'medium',\n        label: 'Primary Button',\n    },\n};\nexport const Secondary = {\n    args: {\n        type: 'secondary',\n        size: 'medium',\n        label: 'Secondary Button',\n    },\n};\nexport const Light = {\n    args: {\n        type: 'light',\n        size: 'medium',\n        label: 'Light Button',\n    },\n    decorators: [\n        (story) => html `\r\n      <div style=\"\r\n        background-color: var(--theme-main-color, orange);\r\n        padding: 20px;\r\n        border-radius: var(--border-radius);\r\n        display: block;\r\n        width: 80%;\r\n        height: 100%;\r\n      \">\r\n        ${story()}\r\n      </div>\r\n    `,\n    ],\n};\nexport const Small = {\n    args: {\n        type: 'primary',\n        size: 'small',\n        label: 'Small Button',\n    },\n};\nexport const Large = {\n    args: {\n        type: 'primary',\n        size: 'large',\n        label: 'Large Button',\n    },\n};\n;export const __namedExportsOrder = [\"Primary\",\"Secondary\",\"Light\",\"Small\",\"Large\"];"],"names":[],"sourceRoot":""}