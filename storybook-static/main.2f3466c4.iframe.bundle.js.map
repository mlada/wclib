{"version":3,"file":"main.2f3466c4.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AA2BA;AACA;;AAEA;;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjCA;AAqCA;AACA;AACA;AACA;;;;AAIA;;;AAGA;AACA;;;AAGA;;;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvDA;;;;;;AAmBA;;;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvBA;;;;;;AAyDA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzDA;AAuDA;AACA;;;AAGA;;;AAGA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;;;AAKA;AACA;;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChFA;AAgCA;;;AAIA;AACA;;;;AAKA;;AAEA;AACA;;AAEA;AACA;;;;;AAMA","sources":["webpack://@mlada/wclib/./src/components/ui-button/ui-button.ts","webpack://@mlada/wclib/./src/components/ui-card/ui-card.ts","webpack://@mlada/wclib/./src/components/ui-footer/ui-footer.ts","webpack://@mlada/wclib/./src/components/ui-header/ui-header.ts","webpack://@mlada/wclib/./src/components/ui-input/ui-input.ts","webpack://@mlada/wclib/./src/components/ui-menu/ui-menu.ts"],"sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { LitElement, html } from \"lit\";\nimport { customElement, property } from \"lit/decorators.js\";\nimport { classMap } from \"lit/directives/class-map.js\";\nimport { styles } from \"./ui-button.styles\";\nlet UiButton = class UiButton extends LitElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"primary\";\n        this.size = \"medium\";\n        this.label = \"\";\n    }\n    static { this.styles = styles; }\n    render() {\n        const classes = {\n            \"ui-button\": true, // Базовый класс всегда добавляется\n            ...(this.type && { [`ui-button--${this.type}`]: true }),\n            ...(this.size && { [`ui-button--${this.size}`]: true }),\n        };\n        return html `\r\n      <button\r\n        type=\"button\"\r\n        class=${classMap(classes)}\r\n        @click=${this.handleClick}\r\n      >\r\n        ${this.label}\r\n      </button>\r\n    `;\n    }\n    handleClick(e) {\n        this.dispatchEvent(new CustomEvent(\"click\", {\n            detail: { originalEvent: e },\n            bubbles: true,\n            composed: true,\n        }));\n    }\n};\n__decorate([\n    property({ type: String })\n], UiButton.prototype, \"type\", void 0);\n__decorate([\n    property({ type: String })\n], UiButton.prototype, \"size\", void 0);\n__decorate([\n    property({ type: String })\n], UiButton.prototype, \"label\", void 0);\nUiButton = __decorate([\n    customElement(\"ui-button\")\n], UiButton);\nexport { UiButton };\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { LitElement, html } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\nimport { styles } from \"./ui-card.styles\";\nlet UiCard = class UiCard extends LitElement {\n    static { this.styles = styles; }\n    #title_accessor_storage = \"\";\n    get title() { return this.#title_accessor_storage; }\n    set title(value) { this.#title_accessor_storage = value; }\n    #description_accessor_storage = \"\";\n    get description() { return this.#description_accessor_storage; }\n    set description(value) { this.#description_accessor_storage = value; }\n    #size_accessor_storage = \"large\";\n    get size() { return this.#size_accessor_storage; }\n    set size(value) { this.#size_accessor_storage = value; }\n    #type_accessor_storage = \"vertical\";\n    get type() { return this.#type_accessor_storage; }\n    set type(value) { this.#type_accessor_storage = value; }\n    #color_accessor_storage = \"dark\";\n    get color() { return this.#color_accessor_storage; }\n    set color(value) { this.#color_accessor_storage = value; }\n    #imageUrl_accessor_storage = \"\";\n    get imageUrl() { return this.#imageUrl_accessor_storage; }\n    set imageUrl(value) { this.#imageUrl_accessor_storage = value; }\n    #imageAlt_accessor_storage = \"\";\n    get imageAlt() { return this.#imageAlt_accessor_storage; }\n    set imageAlt(value) { this.#imageAlt_accessor_storage = value; }\n    #hoverable_accessor_storage = false;\n    get hoverable() { return this.#hoverable_accessor_storage; }\n    set hoverable(value) { this.#hoverable_accessor_storage = value; }\n    render() {\n        return html `\r\n      <div class=\"card card--${this.size} card--${this.type} ${this.hoverable ? 'hoverable' : ''}\">            \r\n        <div class=\"card-content card-content--${this.color}\">\r\n          ${this.title ? html `<p class=\"card-title\">${this.title}</p>` : ''}\r\n          ${this.description ? html `<p class=\"card-description\">${this.description}</p>` : ''}\r\n\r\n        </div>\r\n        <slot name=\"content\"></slot>\r\n        ${this.imageUrl ? html `\r\n          <img \r\n            class=\"card-image\"\r\n            src=${this.imageUrl} \r\n            alt=${this.imageAlt || this.title}\r\n            loading=\"lazy\"\r\n          >\r\n        ` : ''}\r\n        <slot name=\"footer\"></slot>\r\n      </div>\r\n    `;\n    }\n};\n__decorate([\n    property({ type: String })\n], UiCard.prototype, \"title\", null);\n__decorate([\n    property({ type: String })\n], UiCard.prototype, \"description\", null);\n__decorate([\n    property({ type: String })\n], UiCard.prototype, \"size\", null);\n__decorate([\n    property({ type: String })\n], UiCard.prototype, \"type\", null);\n__decorate([\n    property({ type: String })\n], UiCard.prototype, \"color\", null);\n__decorate([\n    property({ type: String, attribute: \"image-url\" })\n], UiCard.prototype, \"imageUrl\", null);\n__decorate([\n    property({ type: String, attribute: \"image-alt\" })\n], UiCard.prototype, \"imageAlt\", null);\n__decorate([\n    property({ type: Boolean })\n], UiCard.prototype, \"hoverable\", null);\nUiCard = __decorate([\n    customElement('ui-card')\n], UiCard);\nexport { UiCard };\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { LitElement, html } from \"lit\";\nimport { customElement } from \"lit/decorators.js\";\nimport { styles } from \"./ui-footer.styles\";\nlet UiFooter = class UiFooter extends LitElement {\n    static { this.styles = styles; }\n    render() {\n        const currentYear = new Date().getFullYear();\n        return html `\r\n      <footer class=\"ui-footer\">\r\n        <div class=\"footer-content\">\r\n          <slot></slot>\r\n        </div>\r\n        <div class=\"copyright\">\r\n          <p>&copy; ${currentYear} Раннева МК. Все права защищены.</p>\r\n        </div>\r\n      </footer>\r\n    `;\n    }\n};\nUiFooter = __decorate([\n    customElement(\"ui-footer\")\n], UiFooter);\nexport { UiFooter };\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { LitElement, html } from 'lit';\nimport { customElement } from 'lit/decorators.js';\nimport { styles } from './ui-header.styles';\nlet UiHeader = class UiHeader extends LitElement {\n    constructor() {\n        super(...arguments);\n        this.scrollHandler = () => {\n            const header = this.shadowRoot?.querySelector('.ui-header');\n            if (header) {\n                const scrollContainer = this.findScrollContainer();\n                const scrollY = scrollContainer?.scrollTop || window.scrollY;\n                if (scrollY > 10) {\n                    header.classList.add('scrolled');\n                }\n                else {\n                    header.classList.remove('scrolled');\n                }\n            }\n        };\n    }\n    static { this.styles = styles; }\n    findScrollContainer() {\n        let el = this;\n        while (el) {\n            if (el.scrollHeight > el.clientHeight && getComputedStyle(el).overflowY !== 'visible') {\n                return el;\n            }\n            el = el.parentElement;\n        }\n        return null;\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        const scrollContainer = this.findScrollContainer() || window;\n        scrollContainer.addEventListener('scroll', this.scrollHandler);\n        // Инициализируем состояние при загрузке\n        setTimeout(() => this.scrollHandler(), 0);\n    }\n    disconnectedCallback() {\n        const scrollContainer = this.findScrollContainer() || window;\n        scrollContainer.removeEventListener('scroll', this.scrollHandler);\n        super.disconnectedCallback();\n    }\n    render() {\n        return html `\r\n      <header class=\"ui-header\">\r\n        <div class=\"header-content\">\r\n          <slot></slot>\r\n        </div>\r\n      </header>\r\n    `;\n    }\n};\nUiHeader = __decorate([\n    customElement('ui-header')\n], UiHeader);\nexport { UiHeader };\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { LitElement, html } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\nimport { styles } from './ui-input.styles';\nlet UiInput = class UiInput extends LitElement {\n    static { this.styles = styles; }\n    #value_accessor_storage = '';\n    get value() { return this.#value_accessor_storage; }\n    set value(value) { this.#value_accessor_storage = value; }\n    #label_accessor_storage = '';\n    get label() { return this.#label_accessor_storage; }\n    set label(value) { this.#label_accessor_storage = value; }\n    #placeholder_accessor_storage = '';\n    get placeholder() { return this.#placeholder_accessor_storage; }\n    set placeholder(value) { this.#placeholder_accessor_storage = value; }\n    #type_accessor_storage = 'text';\n    get type() { return this.#type_accessor_storage; }\n    set type(value) { this.#type_accessor_storage = value; }\n    #disabled_accessor_storage = false;\n    get disabled() { return this.#disabled_accessor_storage; }\n    set disabled(value) { this.#disabled_accessor_storage = value; }\n    #invalid_accessor_storage = false;\n    get invalid() { return this.#invalid_accessor_storage; }\n    set invalid(value) { this.#invalid_accessor_storage = value; }\n    #errorMessage_accessor_storage = '';\n    get errorMessage() { return this.#errorMessage_accessor_storage; }\n    set errorMessage(value) { this.#errorMessage_accessor_storage = value; }\n    #hint_accessor_storage = '';\n    get hint() { return this.#hint_accessor_storage; }\n    set hint(value) { this.#hint_accessor_storage = value; }\n    #prefixIcon_accessor_storage = '';\n    get prefixIcon() { return this.#prefixIcon_accessor_storage; }\n    set prefixIcon(value) { this.#prefixIcon_accessor_storage = value; }\n    #suffixIcon_accessor_storage = '';\n    get suffixIcon() { return this.#suffixIcon_accessor_storage; }\n    set suffixIcon(value) { this.#suffixIcon_accessor_storage = value; }\n    #clearable_accessor_storage = false;\n    get clearable() { return this.#clearable_accessor_storage; }\n    set clearable(value) { this.#clearable_accessor_storage = value; }\n    #handleChange(e) {\n        this.value = e.target.value;\n        this.dispatchEvent(new CustomEvent('change', { detail: this.value }));\n    }\n    #clearValue() {\n        this.value = '';\n        this.dispatchEvent(new CustomEvent('change', { detail: '' }));\n        this.shadowRoot?.querySelector('input')?.focus();\n    }\n    render() {\n        return html `\r\n      <div class=\"input-container ${this.disabled ? 'disabled' : ''} ${this.invalid ? 'invalid' : ''}\">\r\n        ${this.label ? html `<label>${this.label}</label>` : ''}\r\n        \r\n        <div class=\"input-wrapper\">\r\n          ${this.prefixIcon ? html `<span class=\"prefix\">${this.prefixIcon}</span>` : ''}\r\n          \r\n          <input\r\n            type=${this.type}\r\n            placeholder=${this.placeholder}\r\n            .value=${this.value}\r\n            ?disabled=${this.disabled}\r\n            @input=${this.#handleChange}\r\n          >\r\n          \r\n          ${this.suffixIcon ? html `<span class=\"suffix\">${this.suffixIcon}</span>` : ''}\r\n          \r\n          ${this.clearable && this.value && !this.disabled\n            ? html `<button class=\"clear-btn\" @click=${this.#clearValue} type=\"button\">×</button>`\n            : ''}\r\n        </div>\r\n        \r\n        ${this.hint && !this.invalid ? html `<div class=\"hint\">${this.hint}</div>` : ''}\r\n        ${this.invalid && this.errorMessage ? html `<div class=\"error\">${this.errorMessage}</div>` : ''}\r\n      </div>\r\n    `;\n    }\n};\n__decorate([\n    property({ type: String })\n], UiInput.prototype, \"value\", null);\n__decorate([\n    property({ type: String })\n], UiInput.prototype, \"label\", null);\n__decorate([\n    property({ type: String })\n], UiInput.prototype, \"placeholder\", null);\n__decorate([\n    property({ type: String })\n], UiInput.prototype, \"type\", null);\n__decorate([\n    property({ type: Boolean })\n], UiInput.prototype, \"disabled\", null);\n__decorate([\n    property({ type: Boolean })\n], UiInput.prototype, \"invalid\", null);\n__decorate([\n    property({ type: String, attribute: 'error-message' })\n], UiInput.prototype, \"errorMessage\", null);\n__decorate([\n    property({ type: String })\n], UiInput.prototype, \"hint\", null);\n__decorate([\n    property({ type: String, attribute: 'prefix-icon' })\n], UiInput.prototype, \"prefixIcon\", null);\n__decorate([\n    property({ type: String, attribute: 'suffix-icon' })\n], UiInput.prototype, \"suffixIcon\", null);\n__decorate([\n    property({ type: Boolean })\n], UiInput.prototype, \"clearable\", null);\nUiInput = __decorate([\n    customElement('ui-input')\n], UiInput);\nexport { UiInput };\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { LitElement, html } from 'lit';\nimport { customElement, property, state } from 'lit/decorators.js';\nimport { styles } from './ui-menu.styles';\nlet UiMenu = class UiMenu extends LitElement {\n    constructor() {\n        super(...arguments);\n        this.#elements_accessor_storage = [];\n        this.#type_accessor_storage = 'horizontal';\n        this.#size_accessor_storage = 'medium';\n        this.isMenuOpen = false;\n    }\n    static { this.styles = styles; }\n    #elements_accessor_storage;\n    get elements() { return this.#elements_accessor_storage; }\n    set elements(value) { this.#elements_accessor_storage = value; }\n    #type_accessor_storage;\n    get type() { return this.#type_accessor_storage; }\n    set type(value) { this.#type_accessor_storage = value; }\n    #size_accessor_storage;\n    get size() { return this.#size_accessor_storage; }\n    set size(value) { this.#size_accessor_storage = value; }\n    toggleMenu() {\n        this.isMenuOpen = !this.isMenuOpen;\n    }\n    render() {\n        return html `\r\n      ${this.type === 'horizontal'\n            ? html `\r\n            <button \r\n              class=\"burger-button\" \r\n              @click=${this.toggleMenu}\r\n              aria-label=\"${this.isMenuOpen ? 'Закрыть меню' : 'Открыть меню'}\"\r\n            >\r\n              <span class=\"burger-icon\"></span>\r\n            </button>\r\n          `\n            : ''}\r\n      \r\n      <ul class=\"menu ${this.type} ${this.size} ${this.isMenuOpen ? 'open' : ''}\">\r\n        ${this.elements.map((element) => html `\r\n            <li class=\"menu-item\">\r\n              <a href=${element.url} @click=${() => this.isMenuOpen = false}>\r\n                ${element.name}\r\n              </a>\r\n            </li>\r\n          `)}\r\n      </ul>\r\n    `;\n    }\n};\n__decorate([\n    property({ type: Array })\n], UiMenu.prototype, \"elements\", null);\n__decorate([\n    property({ type: String })\n], UiMenu.prototype, \"type\", null);\n__decorate([\n    property({ type: String })\n], UiMenu.prototype, \"size\", null);\n__decorate([\n    state()\n], UiMenu.prototype, \"isMenuOpen\", void 0);\nUiMenu = __decorate([\n    customElement('ui-menu')\n], UiMenu);\nexport { UiMenu };\n"],"names":[],"sourceRoot":""}